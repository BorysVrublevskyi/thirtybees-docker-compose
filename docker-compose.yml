# docker-compose -f docker-compose.yml --env-file ./env/example.env -p thirtybees up -d --remove-orphans

version: '3'

volumes:
  mysql_data:
  public_html:

services:

  starter:
    build:
      context: docker
      dockerfile: starter.dockerfile
    image: alpine-wget:latest
    volumes:
      - public_html:/var/www/html

  web:
    image: nginx:${NGINX_TAG}
    ports:
      - "${HOST_PORT}:80"
    depends_on:
      - starter
      - mysql
    volumes:
      - public_html:/var/www/html
      - ./config/nginx-default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - thirtybees-network
  php:
    build:
      context: docker
      # dockerfile: debian-php7-fpm.dockerfile
      dockerfile: php7-fpm.dockerfile
      args:
        PHP_TAG: ${PHP_TAG}
        DEBIAN_TAG: ${DEBIAN_TAG}
    image: php7-fpm:${PHP_TAG}
    # image: debian-php7-fpm:${DEBIAN_TAG}
    depends_on:
      - starter
      - mysql
    volumes:
      - public_html:/var/www/html
    networks:
      - thirtybees-network
  mysql:
    image: mariadb:${MARIADB_TAG}
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - starter
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - thirtybees-network

  memcached:
    image: memcached:${MEMCACHED_TAG}
    depends_on:
      - starter
      - mysql
    networks:
      - thirtybees-network

networks:
  thirtybees-network:
    driver: bridge
